// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto_natslog/proto_natslog.proto

package proto_natslog

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Severity int32

const (
	Severity_EMERGENCY Severity = 0
	Severity_ALERT     Severity = 1
	Severity_CRITICAL  Severity = 2
	Severity_ERROR     Severity = 3
	Severity_WARNING   Severity = 4
	Severity_NOTICE    Severity = 5
	Severity_INFO      Severity = 6
	Severity_DEBUG     Severity = 7
)

var Severity_name = map[int32]string{
	0: "EMERGENCY",
	1: "ALERT",
	2: "CRITICAL",
	3: "ERROR",
	4: "WARNING",
	5: "NOTICE",
	6: "INFO",
	7: "DEBUG",
}

var Severity_value = map[string]int32{
	"EMERGENCY": 0,
	"ALERT":     1,
	"CRITICAL":  2,
	"ERROR":     3,
	"WARNING":   4,
	"NOTICE":    5,
	"INFO":      6,
	"DEBUG":     7,
}

func (x Severity) String() string {
	return proto.EnumName(Severity_name, int32(x))
}

func (Severity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3029a19f9d7c3c74, []int{0}
}

type Status int32

const (
	Status_ACK Status = 0
	Status_ERR Status = 1
)

var Status_name = map[int32]string{
	0: "ACK",
	1: "ERR",
}

var Status_value = map[string]int32{
	"ACK": 0,
	"ERR": 1,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_3029a19f9d7c3c74, []int{1}
}

type Log struct {
	Message              string   `protobuf:"bytes,1,opt,name=Message,proto3" json:"Message,omitempty"`
	Severity             Severity `protobuf:"varint,2,opt,name=Severity,proto3,enum=Severity" json:"Severity,omitempty"`
	Code                 Status   `protobuf:"varint,3,opt,name=Code,proto3,enum=Status" json:"Code,omitempty"`
	ServiceName          string   `protobuf:"bytes,4,opt,name=ServiceName,proto3" json:"ServiceName,omitempty"`
	Host                 string   `protobuf:"bytes,5,opt,name=Host,proto3" json:"Host,omitempty"`
	PID                  string   `protobuf:"bytes,6,opt,name=PID,proto3" json:"PID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Log) Reset()         { *m = Log{} }
func (m *Log) String() string { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()    {}
func (*Log) Descriptor() ([]byte, []int) {
	return fileDescriptor_3029a19f9d7c3c74, []int{0}
}

func (m *Log) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Log.Unmarshal(m, b)
}
func (m *Log) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Log.Marshal(b, m, deterministic)
}
func (m *Log) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Log.Merge(m, src)
}
func (m *Log) XXX_Size() int {
	return xxx_messageInfo_Log.Size(m)
}
func (m *Log) XXX_DiscardUnknown() {
	xxx_messageInfo_Log.DiscardUnknown(m)
}

var xxx_messageInfo_Log proto.InternalMessageInfo

func (m *Log) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Log) GetSeverity() Severity {
	if m != nil {
		return m.Severity
	}
	return Severity_EMERGENCY
}

func (m *Log) GetCode() Status {
	if m != nil {
		return m.Code
	}
	return Status_ACK
}

func (m *Log) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *Log) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Log) GetPID() string {
	if m != nil {
		return m.PID
	}
	return ""
}

func init() {
	proto.RegisterEnum("Severity", Severity_name, Severity_value)
	proto.RegisterEnum("Status", Status_name, Status_value)
	proto.RegisterType((*Log)(nil), "Log")
}

func init() { proto.RegisterFile("proto_natslog/proto_natslog.proto", fileDescriptor_3029a19f9d7c3c74) }

var fileDescriptor_3029a19f9d7c3c74 = []byte{
	// 307 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcf, 0x4e, 0xc2, 0x40,
	0x10, 0xc6, 0x29, 0x2d, 0x2d, 0x1d, 0xd4, 0x6c, 0xe6, 0xb4, 0xd1, 0x0b, 0x9a, 0x98, 0x10, 0x0e,
	0x25, 0xca, 0x13, 0x94, 0xb2, 0x62, 0x23, 0x14, 0x33, 0x60, 0x8c, 0x5e, 0x4c, 0xa1, 0x9b, 0x4a,
	0x14, 0xd7, 0xd0, 0xa5, 0x89, 0xcf, 0xe4, 0x4b, 0x9a, 0x2e, 0xc1, 0x3f, 0x89, 0xb7, 0xef, 0xf7,
	0xfb, 0x26, 0xd9, 0x9d, 0x81, 0xd3, 0xf7, 0x8d, 0xd2, 0xea, 0xe9, 0x2d, 0xd5, 0xc5, 0xab, 0xca,
	0x7b, 0x7f, 0x28, 0x30, 0x74, 0xf6, 0x69, 0x81, 0x3d, 0x56, 0x39, 0x72, 0xf0, 0x26, 0xb2, 0x28,
	0xd2, 0x5c, 0x72, 0xab, 0x6d, 0x75, 0x7c, 0xda, 0x23, 0x9e, 0x43, 0x73, 0x26, 0x4b, 0xb9, 0x59,
	0xe9, 0x0f, 0x5e, 0x6f, 0x5b, 0x9d, 0xa3, 0x4b, 0x3f, 0xd8, 0x0b, 0xfa, 0xae, 0xf0, 0x04, 0x9c,
	0x48, 0x65, 0x92, 0xdb, 0x66, 0xc4, 0x0b, 0x66, 0x3a, 0xd5, 0xdb, 0x82, 0x8c, 0xc4, 0x36, 0xb4,
	0x66, 0x72, 0x53, 0xae, 0x96, 0x32, 0x49, 0xd7, 0x92, 0x3b, 0xe6, 0x85, 0xdf, 0x0a, 0x11, 0x9c,
	0x6b, 0x55, 0x68, 0xde, 0x30, 0x95, 0xc9, 0xc8, 0xc0, 0xbe, 0x8d, 0x87, 0xdc, 0x35, 0xaa, 0x8a,
	0xdd, 0x97, 0x9f, 0xbf, 0xe0, 0x21, 0xf8, 0x62, 0x22, 0x68, 0x24, 0x92, 0xe8, 0x81, 0xd5, 0xd0,
	0x87, 0x46, 0x38, 0x16, 0x34, 0x67, 0x16, 0x1e, 0x40, 0x33, 0xa2, 0x78, 0x1e, 0x47, 0xe1, 0x98,
	0xd5, 0xab, 0x42, 0x10, 0x4d, 0x89, 0xd9, 0xd8, 0x02, 0xef, 0x3e, 0xa4, 0x24, 0x4e, 0x46, 0xcc,
	0x41, 0x00, 0x37, 0x99, 0xce, 0xe3, 0x48, 0xb0, 0x06, 0x36, 0xc1, 0x89, 0x93, 0xab, 0x29, 0x73,
	0xab, 0xe9, 0xa1, 0x18, 0xdc, 0x8d, 0x98, 0xd7, 0x3d, 0x06, 0x77, 0xb7, 0x04, 0x7a, 0x60, 0x87,
	0xd1, 0x0d, 0xab, 0x55, 0x41, 0x10, 0x31, 0x6b, 0xd0, 0x7f, 0xbc, 0xc8, 0x57, 0xfa, 0x79, 0xbb,
	0x08, 0x96, 0x6a, 0xdd, 0xcb, 0xd2, 0x52, 0x66, 0x4a, 0x67, 0xb2, 0xdc, 0xdd, 0xb8, 0xf7, 0xef,
	0xc5, 0x17, 0xae, 0xc1, 0xfe, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x50, 0xec, 0x61, 0x6c, 0x97,
	0x01, 0x00, 0x00,
}
